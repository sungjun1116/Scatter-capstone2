<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no"
    />
    <title>카페맵</title>
    <link rel="stylesheet" href="/stylesheets/style.css" />
    <script
      type="text/javascript"
      src="https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=9qtiw7bttk"
    ></script>
    <script
      src="https://code.jquery.com/jquery-3.5.1.min.js"
      integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0="
      crossorigin="anonymous"
    ></script>
    <script
      type="text/javascript"
      src="//dapi.kakao.com/v2/maps/sdk.js?appkey=''&libraries=services"
    ></script>
  </head>

  <body>
    <div id="search">
      <input id="search_input" placeholder="목적지를 입력해 주세요" />
      <button id="search_button">검색</button>
    </div>
    <button id="current">현재위치</button>

    <div id="map" style="width: 100%; height: 100vh"></div>

    <!-- <div id="roadview" class="hidden" style="width: 600px; height: 400px"></div> -->

    <script type="text/javascript" src="/data/data3.js"></script>
    <script type="text/javascript" src="/data/restaurant/r1.js"></script>
    <script type="text/javascript" src="/data/restaurant/r2.js"></script>
    <script type="text/javascript" src="/data/restaurant/r3.js"></script>
    <script type="text/javascript" src="/data/gps.js"></script>
    <script>
      var mapOptions = {
        center: new naver.maps.LatLng(37.323515, 127.12401),
        zoom: 17,
      };
      var map = new naver.maps.Map("map", mapOptions);
      var markerList = [];
      var infowindowList = [];

      for (let i in data) {
        let target = data[i];
        if (target.name === "호식당") {
          count = r1;
          total = 14;
          congestion = ((count / total) * 100).toFixed(1);
        } else if (target.name === "고수찜닭") {
          count = r2;
          total = 70;
          congestion = ((count / total) * 100).toFixed(1);
        } else {
          count = r3;
          total = 20;
          congestion = ((count / total) * 100).toFixed(1);
        }

        let notice = "";
        if (congestion >= 70) {
          notice = "혼잡할 수 있는 시설입니다.";
        }

        let latlng = new naver.maps.LatLng(target.lat, target.lng);
        marker = new naver.maps.Marker({
          map: map,
          position: latlng,
          icon: {
            content: "<div class='marker'></div>",
            anchor: new naver.maps.Point(12, 12),
          },
        });
        var content = `<div class='infowindow_wrap'>
          <div class='infowindow_name'>${target.name}</div>
          <div class='infowindow_count'>이용중인 좌석: ${count}석 / ${total}석</div>
          <div class='infowindow_congestion'>좌석 점유도: ${congestion}%</div>
          <div class='infowindow_notice'>${notice}</div>
          <button class="infowindow_roadmap">로드맵 보기</button>
        </div>`;
        var infowindow = new naver.maps.InfoWindow({
          content: content,
          backgroundColor: "#00ff0000",
          borderColor: "#00ff0000",
          anchorSize: new naver.maps.Size(0, 0),
        });
        markerList.push(marker);
        infowindowList.push(infowindow);
      }
      for (var i = 0, ii = markerList.length; i < ii; i++) {
        naver.maps.Event.addListener(map, "click", ClickMap(i));
        naver.maps.Event.addListener(
          markerList[i],
          "click",
          getClickHandler(
            i,
            markerList[i].position._lat,
            markerList[i].position._lng
          )
        );
      }
      function ClickMap(i) {
        return function () {
          var infowindow = infowindowList[i];
          infowindow.close();

          const roadviewContainer = document.getElementById("roadview");
          if (roadviewContainer) {
            roadviewContainer.parentNode.removeChild(roadviewContainer);
          }
        };
      }
      function getClickHandler(i, lat, lng) {
        return function () {
          var marker = markerList[i];
          var infowindow = infowindowList[i];
          if (infowindow.getMap()) {
            infowindow.close();
            const roadviewContainer = document.getElementById("roadview");

            if (roadviewContainer) {
              roadviewContainer.parentNode.removeChild(roadviewContainer);
            }
          } else {
            infowindow.open(map, marker);
          }

          showRoadMap(lat, lng);
        };
      }

      function showRoadMap(lat, lng) {
        const infoWindowBtn = document.querySelector(".infowindow_roadmap");

        if (infoWindowBtn) {
          infoWindowBtn.addEventListener(
            "click",
            handleRoadView.bind(event, lat, lng)
          );
        }
      }

      const handleRoadView = function (lat, lng) {
        // roadmap
        // roadviewContainer.classList.toggle("hidden");
        // console.log(lat, lng);
        // if (roadviewContainer.classList.contains("hidden")) {
        //   const infoWindowBtn = document.querySelector(".infowindow_roadmap");
        //   roadviewContainer.style.display = "none";
        //   setTimeout(() => {
        //     location.reload();
        //   }, 10);
        // } else {
        //   roadviewContainer.style.display = "block";

        const infoWindowBtn = document.querySelector(".infowindow_roadmap");
        const div = document.createElement("div");
        const body = document.querySelector("body");

        div.id = "roadview";
        div.style.width = "600px";
        div.style.height = "400px";
        body.appendChild(div);

        const roadviewContainer = document.getElementById("roadview");

        var roadview = new kakao.maps.Roadview(roadviewContainer);
        var roadviewClient = new kakao.maps.RoadviewClient();
        var position = new kakao.maps.LatLng(lat, lng);

        roadviewClient.getNearestPanoId(position, 50, function (panoId) {
          roadview.setPanoId(panoId, position);
        });
        // }
      };

      $("#current").on("click", function (e) {
        const current_lat = parseFloat(x);
        const current_lng = parseFloat(y);
        const gps = new naver.maps.LatLng(current_lat, current_lng);
        map.setZoom(18, false);
        map.panTo(gps);
      });

      let ps = new kakao.maps.services.Places();
      let search_arr = [];

      $("#search_input").on("keydown", function (e) {
        if (e.keyCode === 13) {
          // enter
          let content = $(this).val();
          ps.keywordSearch(content, placeSearchCB);
        }
      });

      $("#search_button").on("click", function (e) {
        let content = $("#search_input").val();
        ps.keywordSearch(content, placeSearchCB);
      });

      function placeSearchCB(data, status, pagination) {
        if (status === kakao.maps.services.Status.OK) {
          let target = data[0];

          const lat = target.y;
          const lng = target.x;
          const latlng = new naver.maps.LatLng(lat, lng);
          marker = new naver.maps.Marker({
            position: latlng,
            map: map,
          });

          naver.maps.Event.addListener(
            map,
            "click",
            handleMarkerClick(target.place_url, target.place_name)
          );

          if (search_arr.length === 0) {
            search_arr.push(marker);
          } else {
            search_arr.push(marker);
            let pre_marker = search_arr.splice(0, 1);
            pre_marker[0].setMap(null);
          }
          map.setZoom(16, false);
          map.panTo(latlng);
        } else {
          alert("검색결과가 없습니다");
        }
      }

      const handleMarkerClick = (placeUrl, placeName) => {
        const search = document.querySelector("#search");
        const existingA = search.querySelector("a");

        if (existingA) {
          existingA.remove();
        }

        const a = document.createElement("a");
        a.classList.add("search__url");
        a.href = placeUrl;
        a.innerText = placeName;

        // console.log(searchChilds);
        search.appendChild(a);
      };
    </script>
  </body>
</html>
